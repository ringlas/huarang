# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page

GET     /                                   controllers.Library.dashboard()
GET     /huarang                            controllers.Application.home()
GET     /login                              controllers.Application.login()
POST    /login                              controllers.Application.authenticate()
POST    /add                                controllers.Application.createUser()
GET     /logout                             controllers.Application.logout()

# Library pages

GET     /gamebook/:id                       controllers.Library.displayGamebook(id: Integer)
GET     /gamebook/:id/start                 controllers.Library.startGame(id: Integer, replay: Boolean)
GET     /gamebook/:id/generate/:number      controllers.Library.generateEpisode(id: Integer, number: Integer)
GET     /gamebook/:id/display/:number       controllers.Library.displayEpisode(id: Integer, number: Integer)
POST    /gamebook/:id/display/:number       controllers.Library.updateCharSheet(id: Integer, number: Integer)

# Admin pages

GET     /admin                              controllers.admin.Admin.dashboard()
GET     /admin/add/gamebook                 controllers.admin.Admin.createGamebook()
POST    /admin/add/gamebook                 controllers.admin.Admin.saveGamebook()
GET     /admin/list/gamebooks               controllers.admin.Admin.listGamebooks()
POST    /admin/delete/gamebook/:id          controllers.admin.Admin.deleteGamebook(id: Integer)
GET     /admin/edit/gamebook/:id            controllers.admin.Admin.editGamebook(id: Integer)
GET     /admin/view/gamebook/:id            controllers.admin.Admin.viewGamebook(id: Integer)

GET     /admin/add/episode/:gamebook_id     controllers.admin.Admin.createEpisode(gamebook_id: Integer)
POST    /admin/add/episode                  controllers.admin.Admin.saveEpisode()
POST    /admin/delete/episode/:id           controllers.admin.Admin.deleteEpisode(id: Integer)
GET     /admin/edit/episode/:id             controllers.admin.Admin.editEpisode(id: Integer)

GET     /admin/list/users                   controllers.admin.Admin.listUsers()
GET     /admin/user/:id                     controllers.admin.Admin.viewUser(id: Integer)
GET     /admin/add/user                     controllers.admin.Admin.createUser()
GET     /admin/edit/user/:id                controllers.admin.Admin.editUser(id: Integer)
POST    /admin/add/user                     controllers.admin.Admin.saveUser()
POST    /admin/delete/user/:id              controllers.admin.Admin.deleteUser(id: Integer)

GET     /admin/list/tests                   controllers.admin.Admin.listTests()
GET     /admin/add/test                     controllers.admin.Admin.createTest()
POST    /admin/add/test                     controllers.admin.Admin.saveTest()

# Gamebook pages

GET     /skills                             controllers.GamebookController.chooseSkill()
POST    /skills                             controllers.GamebookController.saveSkill()
GET     /skillsbonus                        controllers.GamebookController.skillBonus()
GET     /saved                              controllers.GamebookController.savedGame()
GET     /display/:number                    controllers.GamebookController.displayEpisode(number: Integer)
GET     /gamebook/generate/:number          controllers.GamebookController.generateEpisode(number: Integer)
POST    /display/:number                    controllers.GamebookController.updateCharacterSheet(number: Integer)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                       controllers.Assets.at(path="/public", file)
